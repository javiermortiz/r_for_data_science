# 1. Run ggplot(data = mpg). What do you see?
ggplot(data = mpg)
library("tidyverse")
# 1. Run ggplot(data = mpg). What do you see?
ggplot(data = mpg)
nrow(mtcars)
ncol(mtcars)
# 3. What does the drv variable describe? Read the help for ?mpg to find out.
?mpg
# 4. Make a scatterplot of hwy versus cyl.
ggplot(data = mpg) +
geom_point(mapping = aes(x = hwy, y = cyl))
# 5. What happens if you make a scatterplot of class versus drv? Why is the plot not useful?
ggplot(data = mpg) +
geom_point(mapping = aes(x = class, y = drv))
# 1. What’s gone wrong with this code? Why are the points not blue?
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy,
color = "blue")
)
# 2. Which variables in mpg are categorical? Which variables are continuous? (Hint: type ?mpg to read the documentation for the dataset.) How can you see this information when you run mpg?
?mpg
mpg
# 3. Map a continuous variable to color, size, and shape. How do these aesthetics behave differently for categorical versus contin‐ uous variables?
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy),
color = year, size, cyl, shape = city)
# 3. Map a continuous variable to color, size, and shape. How do these aesthetics behave differently for categorical versus contin‐ uous variables?
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy),
color = year, size = cyl, shape = city)
# 3. Map a continuous variable to color, size, and shape. How do these aesthetics behave differently for categorical versus contin‐ uous variables?
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy),
color = year, size = cyl, shape = city)
shape = city)
# 3. Map a continuous variable to color, size, and shape. How do these aesthetics behave differently for categorical versus contin‐ uous variables?
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy,
color = year, size = cyl,
shape = city))
# 3. Map a continuous variable to color, size, and shape. How do these aesthetics behave differently for categorical versus contin‐ uous variables?
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy,
color = year, size = cyl,
shape = cty))
# What are the advantages to using faceting instead of the color aesthetic? What are the disadvantages? How might the balance change if you had a larger dataset?
# Take the first faceted plot in this section:
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_wrap(~ class, nrow = 2)
# 5. Read ?facet_wrap. What does nrow do? What does ncol do? What other options control the layout of the individual panels? Why doesn’t facet_grid() have nrow and ncol variables?
?facet_wrap
# 2. Run this code in your head and predict what the output will look like. Then, run the code in R and check your predictions:
ggplot(
data = mpg,
mapping = aes(x = displ, y = hwy, color = drv)
)+
geom_point() + geom_smooth(se = FALSE)
# 2. Run this code in your head and predict what the output will look like. Then, run the code in R and check your predictions:
ggplot(
data = mpg,
mapping = aes(x = displ, y = hwy, color = drv)
)+
geom_point() + geom_smooth()
# 2. Run this code in your head and predict what the output will look like. Then, run the code in R and check your predictions:
ggplot(
data = mpg,
mapping = aes(x = displ, y = hwy, color = drv)
)+
geom_point() + geom_smooth(se = False)
# 2. Run this code in your head and predict what the output will look like. Then, run the code in R and check your predictions:
ggplot(
data = mpg,
mapping = aes(x = displ, y = hwy, color = drv)
)+
geom_point() + geom_smooth(se = FALSE)
data = mpg,
ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) +
geom_point() +
geom_smooth()
ggplot() +
geom_point(
data = mpg,
mapping = aes(x = displ, y = hwy) )+
geom_smooth(
data = mpg,
mapping = aes(x = displ, y = hwy)
)
# 6. Re-create the R code necessary to generate the following graphs.
ggplot(data = mpg, aes(x = displ, y = hwy)) +
geom_point() +
geom_smooth()
# 6. Re-create the R code necessary to generate the following graphs.
ggplot(data = mpg, aes(x = displ, y = hwy)) +
geom_point() +
geom_smooth(se = FALSE)
ggplot(data = mpg, aes(x = displ, y = hwy, group = drv)) +
geom_point() +
geom_smooth(se = FALSE)
ggplot(data = mpg, aes(x = displ, y = hwy, color = drv)) +
geom_point() +
geom_smooth(se = FALSE)
ggplot(data = mpg, aes(x = displ, y = hwy)) +
geom_point(aes(color = drv)) +
geom_smooth(se = FALSE)
?facet_wrap
ggplot(data = mpg, aes(x = displ, y = hwy)) +
geom_point(aes(color = drv)) +
geom_smooth(se = FALSE)
ggplot(data = mpg, aes(x = displ, y = hwy)) +
geom_point(aes(color = drv)) +
geom_smooth(se = FALSE, aes(group = drv))
ggplot(data = mpg, aes(x = displ, y = hwy)) +
geom_point(aes(color = drv))
ggplot(data = mpg, aes(x = displ, y = hwy)) +
geom_point() +
geom_smooth(se = FALSE)
ggplot(data = mpg, aes(x = displ, y = hwy, group = drv)) +
geom_point() +
geom_smooth(se = FALSE)
ggplot(data = mpg, aes(x = displ, y = hwy, color = drv)) +
geom_point() +
geom_smooth(se = FALSE)
ggplot(data = mpg, aes(x = displ, y = hwy)) +
geom_point(aes(color = drv)) +
geom_smooth(se = FALSE)
ggplot(data = mpg, aes(x = displ, y = hwy)) +
geom_point(aes(color = drv)) +
geom_smooth(se = FALSE, aes(group = drv))
ggplot(data = mpg, aes(x = displ, y = hwy)) +
geom_point(aes(color = drv))
# 1. What is the default geom associated with stat_summary()? How could you rewrite the previous plot to use that geom function instead of the stat function?
?stat_summary
# 1. What is the default geom associated with stat_summary()? How could you rewrite the previous plot to use that geom function instead of the stat function?
stat_summary(drv)
# 1. What is the default geom associated with stat_summary()? How could you rewrite the previous plot to use that geom function instead of the stat function?
stat_summary(data = mpg, mapping = aes(x = drv)
# 1. What is the default geom associated with stat_summary()? How could you rewrite the previous plot to use that geom function instead of the stat function?
ggplot(data = diamonds) +
ggplot(data = diamonds) +
geom_boxplot(mapping = aes(x = cut, y = depth))
# 2. What does geom_col() do? How is it different to geom_bar()?
?geom_col
# 3. Most geoms and stats come in pairs that are almost always used in concert. Read through the documentation and make a list of all the pairs. What do they have in common?
?geom_abline
# 3. Most geoms and stats come in pairs that are almost always used in concert. Read through the documentation and make a list of all the pairs. What do they have in common?
?Geom
# 4. What variables does stat_smooth() compute? What parameters control its behavior?
?stat_smooth
ggplot(data = diamonds) +
geom_bar(
mapping = aes(x = cut, fill = color, y = ..prop..)
)
# 5. In our proportion bar chart, we need to set group = 1. Why? In other words what is the problem with these two graphs?
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, y = ..prop..))
# 5. In our proportion bar chart, we need to set group = 1. Why? In other words what is the problem with these two graphs?
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, y = ..prop..))
?geom_bar
ggplot(data = diamonds) +
geom_bar(
mapping = aes(x = cut, fill = color, y = ..prop..)
)
# 5. In our proportion bar chart, we need to set group = 1. Why? In other words what is the problem with these two graphs?
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, y = ..prop.., group = 1))
# 5. In our proportion bar chart, we need to set group = 1. Why? In other words what is the problem with these two graphs?
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, y = ..prop..))
# 5. In our proportion bar chart, we need to set group = 1. Why? In other words what is the problem with these two graphs?
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, y = ..prop.., group = 1))
